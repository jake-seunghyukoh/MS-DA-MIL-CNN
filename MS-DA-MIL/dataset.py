DLBCL_1 = [
    "15596",
    "15587",
    "15618",
    "17270",
    "17255",
    "17284",
    "15632",
    "17296",
    "17267",
    "16351",
    "15633",
    "15635",
    "15591",
    "15599",
    "17287",
    "16350",
    "15590",
    "17245",
    "15594",
    "16335",
]
DLBCL_2 = [
    "15606",
    "16342",
    "16347",
    "16415",
    "17281",
    "17254",
    "15621",
    "17293",
    "17292",
    "16419",
    "17276",
    "17260",
    "15614",
    "15588",
    "17256",
    "15637",
    "17261",
    "17288",
    "17248",
    "16337",
]
DLBCL_3 = [
    "15647",
    "17271",
    "16491",
    "16348",
    "16954",
    "17239",
    "15642",
    "15620",
    "17249",
    "17264",
    "17240",
    "17251",
    "15616",
    "15648",
    "17283",
    "17273",
    "17274",
    "17290",
    "17241",
    "15595",
]
DLBCL_4 = [
    "15592",
    "17291",
    "15634",
    "16496",
    "16493",
    "16341",
    "15603",
    "17242",
    "17252",
    "15660",
    "15601",
    "17266",
    "15613",
    "15611",
    "16418",
    "15593",
    "16336",
    "15602",
    "17250",
]
DLBCL_5 = [
    "15610",
    "17253",
    "17257",
    "15619",
    "17272",
    "15609",
    "15646",
    "15605",
    "15598",
    "17280",
    "15607",
    "16338",
    "15586",
    "16403",
    "16414",
    "16416",
    "17265",
    "16339",
    "17279",
]

nonDLBCL_1 = [
    "15742",
    "15393",
    "15567",
    "15759",
    "15402",
    "15562",
    "15561",
    "15404",
    "15364",
    "15747",
    "15378",
    "15417",
    "15749",
    "15381",
    "15412",
    "15411",
    "15706",
    "15728",
    "15733",
    "15343",
]
nonDLBCL_2 = [
    "15692",
    "15575",
    "15385",
    "15345",
    "15700",
    "15331",
    "15578",
    "15741",
    "15786",
    "15583",
    "15717",
    "15356",
    "15787",
    "15697",
    "15580",
    "15793",
    "15376",
    "15387",
    "15791",
    "15401",
]
nonDLBCL_3 = [
    "15563",
    "15581",
    "15372",
    "15795",
    "15568",
    "15694",
    "15424",
    "15366",
    "15756",
    "15722",
    "15731",
    "15735",
    "15693",
    "15702",
    "15335",
    "15758",
    "15738",
    "15736",
    "15755",
    "15752",
]
nonDLBCL_4 = [
    "15327",
    "15707",
    "15324",
    "15566",
    "15582",
    "15729",
    "15715",
    "15391",
    "15556",
    "15724",
    "15559",
    "15422",
    "15732",
    "15407",
    "15572",
    "15375",
    "15558",
    "15712",
    "15353",
]
nonDLBCL_5 = [
    "15584",
    "15739",
    "15627",
    "15628",
    "15362",
    "15425",
    "15796",
    "15569",
    "15719",
    "15328",
    "15352",
    "15698",
    "15421",
    "15323",
    "15720",
    "15748",
    "16334",
    "15734",
    "15367",
]


# split slides (patients) for training and testing set
# (here we consider 5-fold cross-validation and dataset is divided to 5 groups)
def slide_split(train, test):
    # ex. train = '123', valid = '4'
    train_list = [i for i in train]
    data_map = {}
    data_map["data1"] = [DLBCL_1, nonDLBCL_1]
    data_map["data2"] = [DLBCL_2, nonDLBCL_2]
    data_map["data3"] = [DLBCL_3, nonDLBCL_3]
    data_map["data4"] = [DLBCL_4, nonDLBCL_4]
    data_map["data5"] = [DLBCL_5, nonDLBCL_5]

    train_DLBCL = []
    train_nonDLBCL = []
    for num in train_list:
        train_DLBCL = train_DLBCL + data_map[f"data{num}"][0]
        train_nonDLBCL = train_nonDLBCL + data_map[f"data{num}"][1]

    test_DLBCL = data_map[f"data{test}"][0]
    test_nonDLBCL = data_map[f"data{test}"][1]

    return train_DLBCL, train_nonDLBCL, test_DLBCL, test_nonDLBCL
